<?xml version="1.0" ?>

<container xmlns="http://symfony.com/schema/dic/services"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <services>

        <service id="shopware.api.cors_listener" class="Shopware\Rest\EventListener\CorsListener">
            <tag name="kernel.event_subscriber" />
        </service>

        <service id="shopware.api.event_listener.api_exception_listener" class="Shopware\Rest\EventListener\ApiExceptionListener">
            <tag name="kernel.event_subscriber" />
            <argument type="service" id="logger" />
        </service>

        <service class="Shopware\Rest\ApiContextValueResolver" id="shopware.api.api_context_value_resolver">
            <tag name="controller.argument_value_resolver"/>
        </service>

        <service class="Shopware\Rest\Firewall\AuthProvider" id="shopware.rest.firewall.auth_provider">
            <argument type="service" id="dbal_connection" />
        </service>

        <service id="shopware.rest.firewall.event.authentication_failure_listener" class="Shopware\Rest\Firewall\AuthenticationFailureListener">
            <tag name="kernel.event_listener" event="lexik_jwt_authentication.on_authentication_failure" method="onAuthenticationFailureResponse" />
            <tag name="kernel.event_listener" event="lexik_jwt_authentication.on_jwt_invalid" method="onJWTInvalid" />
            <tag name="kernel.event_listener" event="lexik_jwt_authentication.on_jwt_not_found" method="onJWTNotFound" />
            <tag name="kernel.event_listener" event="lexik_jwt_authentication.on_jwt_expired" method="onJWTExpired" />
        </service>

        <service class="Shopware\Rest\Firewall\AuthenticationSuccessListener" id="shopware.rest.firewall.jwtcreated_listener">
            <argument>%lexik_jwt_authentication.token_ttl%</argument>
            <tag name="kernel.event_listener" event="lexik_jwt_authentication.on_authentication_success" method="onAuthenticationSuccessResponse" />
        </service>

        <service class="Shopware\Rest\Command\UserCreateCommand" id="shopware.rest.command.user_create_command">
            <argument id="Shopware\User\Repository\UserRepository" type="service"/>
            <argument id="security.encoder_factory.generic" type="service"/>
            <tag name="console.command"/>
        </service>


    </services>
</container>
