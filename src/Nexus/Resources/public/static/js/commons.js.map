{"version":3,"sources":["webpack:///./src/core/factory/template.factory.js","webpack:///fs (ignored)","webpack:///./src/core/common.js","webpack:///./src/core/common.js?62aa","webpack:///./src/core/factory/module.factory.js","webpack:///./src/core/factory/module.factory.js?39bc","webpack:///./src/core/factory/component.factory.js?498c","webpack:///./src/core/factory/component.factory.js","webpack:///./src/core/service/util.service.js","webpack:///./src/core/factory/view.factory.js","webpack:///./src/core/factory/router.factory.js"],"names":["registerComponentTemplate","extendComponentTemplate","registerTemplateOverride","getRenderedTemplate","getTemplateOverrides","getTemplateRegistry","findCustomTemplate","findCustomOverride","templateRegistry","Twig","extend","TwigCore","token","definitions","exports","extendTag","type","regex","next","open","parse","context","chain","output","placeholders","parent","componentName","componentTemplate","template","get","templateConfig","id","data","baseTemplate","twig","set","extendComponentName","templateExtension","has","extendTemplate","tokens","templateOverride","overrideIndex","overrides","length","override","splice","push","parentPlaceholder","blocks","render","forEach","templateBlocks","blockName","replace","element","document","querySelector","innerHTML","module","global","require","componentRegistry","getComponentRegistry","register","componentConfiguration","config","utils","merge","name","TemplateFactory","extendedComponent","getComponentTemplate","formDataToObject","target","source","key","Object","formData","reduce","result","item","ViewFactory","viewAdapter","getName","wrapper","getWrapper","createInstance","createComponent","initComponents","getComponent","getComponents","createRouter","Router","View","allRoutes","moduleRoutes","addRoutes","addModuleRoutes","createRouterInstance","getViewComponent","opts","mergedRoutes","registerModuleRoutesAsChildren","options","routes","router","core","route","root","coreRoute","children","component"],"mappings":"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","file":"static/js/commons.js","sourcesContent":["import Twig from 'twig';\n\nexport default {\n    registerComponentTemplate,\n    extendComponentTemplate,\n    registerTemplateOverride,\n    getRenderedTemplate,\n    getTemplateOverrides,\n    getTemplateRegistry,\n    findCustomTemplate,\n    findCustomOverride\n};\n\n/**\n * Holds a list with all registered component templates.\n * Including registered overrides.\n *\n * @type {Map}\n */\nconst templateRegistry = new Map();\n\n/**\n * Extends the Twig core for compatibility.\n */\nTwig.extend((TwigCore) => {\n    /**\n     * Remove tokens 2, 3, 4 and 8.\n     * This tokens are used for functions and data output.\n     * Since the data binding is done in Vue this could lead to syntax issues.\n     * We are only using the block system for template inheritance.\n     *\n     * @type {[*]}\n     */\n    TwigCore.token.definitions = [\n        TwigCore.token.definitions[0],\n        TwigCore.token.definitions[1],\n        TwigCore.token.definitions[5],\n        TwigCore.token.definitions[6],\n        TwigCore.token.definitions[7],\n        TwigCore.token.definitions[9],\n        TwigCore.token.definitions[10]\n    ];\n\n    /**\n     * Twig inheritance extension.\n     * The parent function is used as a statement tag.\n     * This is used to prevent syntax issues between Twig and Vue.\n     * Use `{% parent %}` to print out the parent content of a block.\n     */\n    TwigCore.exports.extendTag({\n        type: 'parent',\n        regex: /^parent/,\n        next: [],\n        open: true,\n\n        parse(token, context, chain) {\n            return {\n                chain,\n                output: TwigCore.placeholders.parent\n            };\n        }\n    });\n\n    /**\n     * Make the placeholders available in the exposed Twig object.\n     */\n    TwigCore.exports.placeholders = TwigCore.placeholders;\n});\n\n/**\n * Registers the main template for the defined component.\n *\n * @param componentName\n * @param componentTemplate\n */\nfunction registerComponentTemplate(componentName, componentTemplate = null) {\n    const template = templateRegistry.get(componentName) || {};\n\n    /**\n     * If there is no template given, search the DOM.\n     */\n    if (componentTemplate === null) {\n        componentTemplate = findCustomTemplate(componentName);\n    }\n\n    const templateConfig = {\n        id: `${componentName}-baseTemplate`,\n        data: componentTemplate\n    };\n\n    template.baseTemplate = Twig.twig(templateConfig);\n\n    templateRegistry.set(componentName, template);\n}\n\n/**\n * Registers the main template for the component\n * based on the template of the extended component.\n * If the component comes with an own template extension\n * it will also be registered as an override of the extended template.\n *\n * @param componentName\n * @param extendComponentName\n * @param templateExtension\n */\nfunction extendComponentTemplate(componentName, extendComponentName, templateExtension = null) {\n    if (!templateRegistry.has(extendComponentName)) {\n        if (templateExtension !== null) {\n            registerComponentTemplate(componentName, templateExtension);\n        }\n\n        return;\n    }\n\n    const extendTemplate = templateRegistry.get(extendComponentName);\n    const template = templateRegistry.get(componentName) || {};\n\n    const templateConfig = {\n        id: `${componentName}-baseTemplate`,\n        data: extendTemplate.baseTemplate.tokens\n    };\n\n    template.baseTemplate = Twig.twig(templateConfig);\n\n    templateRegistry.set(componentName, template);\n\n    if (templateExtension !== null) {\n        registerTemplateOverride(componentName, templateExtension);\n    }\n}\n\n/**\n * Registers an override of a component template.\n * The override can be registered before the main template is defined.\n *\n * @param componentName\n * @param templateOverride\n * @param overrideIndex\n */\nfunction registerTemplateOverride(componentName, templateOverride = null, overrideIndex = null) {\n    const template = templateRegistry.get(componentName) || {};\n\n    template.overrides = template.overrides || [];\n\n    if (templateOverride === null) {\n        templateOverride = findCustomOverride(componentName);\n    }\n\n    const templateConfig = {\n        id: `${componentName}-${template.overrides.length}`,\n        data: templateOverride\n    };\n\n    const override = Twig.twig(templateConfig);\n\n    /**\n     * You can change the inheritance order by defining the override index.\n     */\n    if (overrideIndex !== null) {\n        template.overrides.splice(overrideIndex, 0, override);\n    } else {\n        template.overrides.push(override);\n    }\n\n    templateRegistry.set(componentName, template);\n}\n\n/**\n * Returns the rendered markup for the component template including all template overrides.\n *\n * @param componentName\n * @returns {string}\n */\nfunction getRenderedTemplate(componentName) {\n    if (!templateRegistry.has(componentName)) {\n        return '';\n    }\n\n    const template = templateRegistry.get(componentName);\n\n    if (!template.baseTemplate) {\n        return '';\n    }\n\n    /**\n     * The base template is the main template of the component.\n     */\n    const baseTemplate = template.baseTemplate;\n    const overrides = template.overrides;\n    const parentPlaceholder = Twig.placeholders.parent;\n    const blocks = {};\n\n    baseTemplate.render();\n\n    /**\n     * Iterate through template extensions and collect all block overrides.\n     */\n    if (overrides) {\n        overrides.forEach((override) => {\n            const templateBlocks = override.render({}, {\n                output: 'blocks'\n            });\n\n            /**\n             * Replace the parent placeholder with the parent block.\n             * This ensures multi level inheritance.\n             */\n            Object.keys(blocks).forEach((blockName) => {\n                if (templateBlocks[blockName]) {\n                    templateBlocks[blockName] = templateBlocks[blockName].replace(\n                        parentPlaceholder,\n                        blocks[blockName]\n                    );\n                }\n            });\n\n            Object.assign(blocks, templateBlocks);\n        });\n    }\n\n    /**\n     * Render the base template with all collected block overrides.\n     */\n    return baseTemplate.render({}, {\n        blocks\n    });\n}\n\n/**\n * Get all template overrides which are registered for a component.\n *\n * @param componentName\n * @returns {*}\n */\nfunction getTemplateOverrides(componentName) {\n    if (!templateRegistry.has(componentName)) {\n        return [];\n    }\n\n    const template = templateRegistry.get(componentName);\n\n    return template.overrides || [];\n}\n\n/**\n * Get the complete template registry.\n *\n * @returns {Map}\n */\nfunction getTemplateRegistry() {\n    return templateRegistry;\n}\n\n/**\n * Find a component template in the DOM.\n * You can define component templates by creating a template element with a `component` attribute.\n * The attribute should contain the name of the component.\n *\n * @param componentName\n * @returns {String}\n */\nfunction findCustomTemplate(componentName) {\n    const element = document.querySelector(`template[component=\"${componentName}\"]`);\n\n    return (element !== null) ? element.innerHTML : '';\n}\n\n/**\n * Find a template override in the DOM.\n * You can define template overrides by creating a template element with a `override` attribute.\n * The attribute should contain the name of the component you want to override.\n *\n * @param componentName\n * @returns {String}\n */\nfunction findCustomOverride(componentName) {\n    const element = document.querySelector(`template[override=\"${componentName}\"]`);\n\n    return (element !== null) ? element.innerHTML : '';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/factory/template.factory.js","/* (ignored) */\n\n\n//////////////////\n// WEBPACK FOOTER\n// fs (ignored)\n// module id = 102\n// module chunks = 2","module.exports = global[\"Shopware\"] = require(\"-!/Applications/MAMP/htdocs/sw-labs/src/Nexus/Resources/nexus/node_modules/eslint-loader/index.js??ref--0!./common.js\");\n\n\n// WEBPACK FOOTER //\n// ./src/core/common.js","const ModuleFactory = require('src/core/factory/module.factory');\nconst ComponentFactory = require('src/core/factory/component.factory');\nconst utils = require('src/core/service/util.service');\nconst TemplateFactory = require('src/core/factory/template.factory');\nconst ViewFactory = require('src/core/factory/view.factory');\nconst RouterFactory = require('src/core/factory/router.factory');\n\nmodule.exports = {\n    ModuleFactory,\n    ComponentFactory,\n    TemplateFactory,\n    ViewFactory,\n    RouterFactory,\n    utils\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/eslint-loader?{}!./src/core/common.js\n// module id = 148\n// module chunks = 2","module.exports = global[\"ModuleFactory\"] = require(\"-!/Applications/MAMP/htdocs/sw-labs/src/Nexus/Resources/nexus/node_modules/eslint-loader/index.js??ref--0!./module.factory.js\");\n\n\n// WEBPACK FOOTER //\n// ./src/core/factory/module.factory.js","export {\n    getModuleRoutes,\n    registerModule,\n    getModuleRegistry\n};\n\n/** @type Map modules - Registry for modules */\nconst modules = new Map();\n\n/**\n * Returns the registry of all modules mounted in the application.\n *\n * @returns {Map} modules - Registry of all modules\n */\nfunction getModuleRegistry() {\n    return modules;\n}\n\n/**\n * Registers a module in the application. The module will be mounted using\n * the defined routes of the module using the router.\n *\n * @param {Object} module - Module definition - see manifest.js file\n * @param {String} [type=plugin] - Type of the module\n * @returns {Array} registered module routes\n */\nfunction registerModule(module, type = 'plugin') {\n    const moduleRoutes = [];\n    const moduleId = module.id;\n\n    // A module should always have an unique identifier cause overloading modules can cause unexpected side effects\n    if (!moduleId) {\n        console.warn('[module.factory] Module has no unique identifier', module);\n    }\n\n    // Modules will be mounted using the routes definition in the manifest file. If the module doesn't contains a routes\n    // definition it's not accessible in the application.\n    if (!Object.prototype.hasOwnProperty.call(module, 'routes')) {\n        console.warn(\n            `[module.factory] Module \"${moduleId}\" has no defined routes. The module will not be accessible.`,\n            module\n        );\n        return moduleRoutes;\n    }\n\n    // Sanitize the modules routes\n    Object.keys(module.routes).forEach((routeKey) => {\n        const route = module.routes[routeKey];\n\n        // Rewrite name and path\n        route.name = `${moduleId}.${routeKey}`;\n        route.path = `/${type}/${route.path}`;\n        route.type = type;\n        route.component = route.component.name;\n\n        // Alias support\n        if (route.alias && route.alias.length > 0) {\n            route.alias = `/${type}/${route.alias}`;\n        }\n\n        moduleRoutes.push(route);\n    });\n\n    const moduleDefinition = {\n        routes: moduleRoutes,\n        manifest: module\n    };\n\n    if (Object.prototype.hasOwnProperty.bind(module, 'navigation') && module.navigation) {\n        moduleDefinition.navigation = module.navigation;\n    }\n\n    modules.set(moduleId, moduleDefinition);\n    return moduleRoutes;\n}\n\n/**\n * Returns the defined module routes which will be registered in the router and therefore will be accessible in the\n * application.\n *\n * @returns {Array} route definitions - see {@link https://router.vuejs.org/en/essentials/named-routes.html}\n */\nfunction getModuleRoutes() {\n    const moduleRoutes = [];\n\n    modules.forEach((module) => {\n        module.routes.forEach((route) => {\n            moduleRoutes.push(route);\n        });\n    });\n    return moduleRoutes;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/eslint-loader?{}!./src/core/factory/module.factory.js\n// module id = 150\n// module chunks = 2","module.exports = global[\"ComponentFactory\"] = require(\"-!/Applications/MAMP/htdocs/sw-labs/src/Nexus/Resources/nexus/node_modules/babel-loader/lib/index.js??ref--3!/Applications/MAMP/htdocs/sw-labs/src/Nexus/Resources/nexus/node_modules/eslint-loader/index.js??ref--0!./component.factory.js\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/core/factory/component.factory.js\n// module id = 151\n// module chunks = 2","import utils from 'src/core/service/util.service';\nimport TemplateFactory from 'src/core/factory/template.factory';\n\nexport {\n    register,\n    extend,\n    override,\n    getComponentTemplate,\n    getComponentRegistry\n};\n\nconst componentRegistry = new Map();\n\n/**\n * Returns the map with all registered components.\n *\n * @returns {Map}\n */\nfunction getComponentRegistry() {\n    return componentRegistry;\n}\n\n/**\n * Register a new component.\n *\n * @param componentName\n * @param componentConfiguration\n * @returns {*}\n */\nfunction register(componentName, componentConfiguration) {\n    let config = componentConfiguration;\n\n    config = utils.merge(config, {\n        name: componentName\n    });\n\n    if (config.template) {\n        /**\n         * Register the main template of the component.\n         */\n        TemplateFactory.registerComponentTemplate(componentName, config.template);\n\n        /**\n         * Delete the template string from the component config.\n         * The complete rendered template including all overrides will be added later.\n         */\n        delete config.template;\n    }\n\n    componentRegistry.set(componentName, config);\n\n    return config;\n}\n\n/**\n * Create a new component extending from another existing component.\n *\n * @param componentName\n * @param extendComponentName\n * @param componentConfiguration\n * @returns {*}\n */\nfunction extend(componentName, extendComponentName, componentConfiguration) {\n    let config = componentConfiguration;\n\n    if (!componentRegistry.has(extendComponentName)) {\n        return register(componentName, config);\n    }\n\n    const name = componentName;\n    const extendedComponent = componentRegistry.get(extendComponentName);\n\n    if (config.template) {\n        /**\n         * Register the main template of the component based on the extended component.\n         */\n        TemplateFactory.extendComponentTemplate(name, extendComponentName, config.template);\n\n        /**\n         * Delete the template string from the component config.\n         * The complete rendered template including all overrides will be added later.\n         */\n        delete config.template;\n    } else {\n        TemplateFactory.extendComponentTemplate(componentName, extendComponentName);\n    }\n\n    config = Object.assign(config, {\n        name: componentName\n    });\n\n    config = Object.assign({}, extendedComponent, config);\n\n    componentRegistry.set(componentName, config);\n\n    return config;\n}\n\n/**\n * Override an existing component including its config and template.\n *\n * ToDo@All: Keep reference to original config object.\n *\n * @param componentName\n * @param componentConfiguration\n * @param overrideIndex\n * @returns {*}\n */\nfunction override(componentName, componentConfiguration, overrideIndex = null) {\n    let config = componentConfiguration;\n\n    if (!componentRegistry.has(componentName)) {\n        return register(componentName, config);\n    }\n\n    config = Object.assign(config, {\n        name: componentName\n    });\n\n    if (config.template) {\n        /**\n         * Register a template override for the existing component template.\n         */\n        TemplateFactory.registerTemplateOverride(componentName, config.template, overrideIndex);\n\n        /**\n         * Delete the template string from the component config.\n         * The complete rendered template including all overrides will be added later.\n         */\n        delete config.template;\n    }\n\n    config = Object.assign({}, componentRegistry.get(componentName), config);\n\n    componentRegistry.set(componentName, config);\n\n    return config;\n}\n\n/**\n * Returns the complete rendered template of the component.\n *\n * @param componentName\n * @returns {string}\n */\nfunction getComponentTemplate(componentName) {\n    return TemplateFactory.getRenderedTemplate(componentName);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/factory/component.factory.js","export default {\n    merge,\n    formDataToObject\n};\n\n// Todo: This has an issue when you want to copy into a new object\nfunction merge(target, source) {\n    Object.keys(source).forEach((key) => {\n        if (source[key] instanceof Object) {\n            if (!target[key]) {\n                Object.assign(target, { [key]: {} });\n            }\n            Object.assign(source[key], merge(target[key], source[key]));\n        }\n    });\n\n    Object.assign(target || {}, source);\n    return target;\n}\n\n\nfunction formDataToObject(formData) {\n    return Array.from(formData).reduce((result, item) => {\n        result[item[0]] = item[1];\n        return result;\n    }, {});\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/service/util.service.js","export default function ViewFactory(viewAdapter) {\n    return {\n        name: viewAdapter.getName(),\n        wrapper: viewAdapter.getWrapper(),\n        createInstance: viewAdapter.createInstance,\n        createComponent: viewAdapter.createComponent,\n        initComponents: viewAdapter.initComponents,\n        getComponent: viewAdapter.getComponent,\n        getComponents: viewAdapter.getComponents\n    };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/factory/view.factory.js","export default function createRouter(Router, View) {\n    let allRoutes = [];\n    let moduleRoutes = [];\n\n    return {\n        addRoutes,\n        addModuleRoutes,\n        createRouterInstance,\n        getViewComponent\n    };\n\n    function createRouterInstance(opts) {\n        const mergedRoutes = registerModuleRoutesAsChildren(allRoutes, moduleRoutes);\n\n        const options = Object.assign({}, opts, {\n            routes: mergedRoutes\n        });\n\n        const router = new Router(options);\n\n        // createAuthenticationInterceptor(router);\n        return router;\n    }\n\n    /* function createAuthenticationInterceptor(router) {\n        router.beforeEach((to, from, next) => {\n            if (to.name === 'login' || to.path === '/login') {\n                return next();\n            }\n\n            if (!app.state.state.bearerToken) {\n                return next({ path: '/login' });\n            }\n            return next();\n        });\n    } */\n\n    function registerModuleRoutesAsChildren(core, module) {\n        core.forEach((route) => {\n            if (route.root === true && route.coreRoute === true) {\n                route.children = module;\n            }\n        });\n\n        return core;\n    }\n\n    function addModuleRoutes(routes) {\n        routes.forEach((route) => {\n            if (typeof route.component === 'string') {\n                route.component = getViewComponent(route.component);\n            }\n        });\n\n        moduleRoutes = [...moduleRoutes, ...routes];\n\n        return moduleRoutes;\n    }\n\n    function addRoutes(routes) {\n        routes.forEach((route) => {\n            if (typeof route.component === 'string') {\n                route.component = getViewComponent(route.component);\n            }\n        });\n\n        allRoutes = [...allRoutes, ...routes];\n\n        return allRoutes;\n    }\n\n    function getViewComponent(componentName) {\n        return View.getComponent(componentName);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/factory/router.factory.js"],"sourceRoot":""}