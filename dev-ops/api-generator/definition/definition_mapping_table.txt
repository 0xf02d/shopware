<?php

namespace Shopware\Api\#BundleName#\Definition;

use Shopware\Api\Entity\MappingEntityDefinition;
use Shopware\Api\Entity\FieldCollection;
use Shopware\Api\#BundleName#\Event\#TableDomainNameUc#\#TableDomainNameUc#WrittenEvent;
use Shopware\Api\#BundleName#\Event\#TableDomainNameUc#\#TableDomainNameUc#DeletedEvent;
use Shopware\Api\Entity\Write\Flag\CascadeDelete;
use Shopware\Api\Entity\Write\Flag\RestrictDelete;
use Shopware\Api\Entity\Write\Flag\WriteOnly;

#uses#

class #TableDomainNameUc#Definition extends MappingEntityDefinition
{
    /**
     * @var FieldCollection
     */
    protected static $fields;

    /**
     * @var FieldCollection
     */
    protected static $primaryKeys;

    public static function getEntityName(): string
    {
        return '#table#';
    }

    public static function getFields(): FieldCollection
    {
        if (self::$fields) {
            return self::$fields;
        }

        return self::$fields = new FieldCollection([
            #fields#
        ]);
    }

    public static function getWrittenEventClass(): string
    {
        return #TableDomainNameUc#WrittenEvent::class;
    }

    public static function getDeletedEventClass(): string
    {
        return #TableDomainNameUc#DeletedEvent::class;
    }

#injection#
}