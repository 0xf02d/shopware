<?php declare(strict_types=1);

namespace Shopware\#classUc#\Reader;

use Doctrine\DBAL\Connection;
use PDO;
use Shopware\Context\Struct\TranslationContext;
use Shopware\Framework\Struct\SortArrayByKeysTrait;
use Shopware\#classUc#\Reader\Query\#classUc##suffix#Query;
use Shopware\#classUc#\Struct\#classUc##suffix#Collection;

class #classUc##suffix#Reader
{
    use SortArrayByKeysTrait;

    /**
     * @var Connection
     */
    private $connection;

    /**
     * @var #classUc##suffix#Hydrator
     */
    private $hydrator;

    public function __construct(Connection $connection, #classUc##suffix#Hydrator $hydrator)
    {
        $this->connection = $connection;
        $this->hydrator = $hydrator;
    }

    public function read(array $uuids, TranslationContext $context): #classUc##suffix#Collection
    {
        $query = new #classUc##suffix#Query($this->connection, $context);

        $query->andWhere('#classLc#.uuid IN (:uuids)');
        $query->setParameter(':uuids', $uuids, Connection::PARAM_STR_ARRAY);

        $rows = $query->execute()->fetchAll(PDO::FETCH_GROUP|PDO::FETCH_UNIQUE);

        $structs = [];
        foreach ($rows as $uuid => $row) {
            $structs[$uuid] = $this->hydrator->hydrate($row);
        }

        return new #classUc##suffix#Collection(
            $this->sortIndexedArrayByKeys($uuids, $structs)
        );
    }
}